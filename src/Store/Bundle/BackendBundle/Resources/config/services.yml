parameters:
#    store_backend.example.class: Store\Bundle\BackendBundle\Example

services:
#Event Listener
    store.response_listener:
        class: Store\Bundle\BackendBundle\EventListener\KernelRequestListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener , event: kernel.request , method: onKernelRequest }

#Helper
    file.save:
        class: Store\Bundle\BackendBundle\FileHandle\SaveFileHandler
        arguments: [@service_container]
#twig extension:
    currency.twig.extension:
        class: Store\Bundle\BackendBundle\Twig\CurrencyExtension
        tags:
            - { name: twig.extension }
#RepositoryFactory

    user.repo:
        class: Doctrine\Common\Persistence\ObjectRepository
        factory_service: doctrine
        factory_method: getRepository
        arguments: [ Store\Bundle\BackendBundle\Entity\User ]

    product.repo:
        class: Doctrine\Common\Persistence\ObjectRepository
        factory_service: doctrine
        factory_method: getRepository
        arguments: [ Store\Bundle\BackendBundle\Entity\Product ]

    basket.repo:
        class: Doctrine\Common\Persistence\ObjectRepository
        factory_service: doctrine
        factory_method: getRepository
        arguments: [ Store\Bundle\BackendBundle\Entity\ProductBasket ]

    category.repo:
        class: Doctrine\Common\Persistence\ObjectRepository
        factory_service: doctrine
        factory_method: getRepository
        arguments: [ Store\Bundle\BackendBundle\Entity\Category ]

    store.repo:
        class: Doctrine\Common\Persistence\ObjectRepository
        factory_service: doctrine
        factory_method: getRepository
        arguments: [ Store\Bundle\BackendBundle\Entity\Store ]

    city.repo:
        class: Doctrine\Common\Persistence\ObjectRepository
        factory_service: doctrine
        factory_method: getRepository
        arguments: [ Store\Bundle\BackendBundle\Entity\City ]

    photo.repo:
        class: Doctrine\Common\Persistence\ObjectRepository
        factory_service: doctrine
        factory_method: getRepository
        arguments: [ Store\Bundle\BackendBundle\Entity\Photo ]

    cart.repo:
        class: Doctrine\Common\Persistence\ObjectRepository
        factory_service: doctrine
        factory_method: getRepository
        arguments: [ Store\Bundle\BackendBundle\Entity\Cart ]

    cart_item.repo:
        class: Doctrine\Common\Persistence\ObjectRepository
        factory_service: doctrine
        factory_method: getRepository
        arguments: [ Store\Bundle\BackendBundle\Entity\CartItem ]

    order.repo:
        class: Doctrine\Common\Persistence\ObjectRepository
        factory_service: doctrine
        factory_method: getRepository
        arguments: [ Store\Bundle\BackendBundle\Entity\Orders ]

    address.repo:
        class: Doctrine\Common\Persistence\ObjectRepository
        factory_service: doctrine
        factory_method: getRepository
        arguments: [ Store\Bundle\BackendBundle\Entity\Address ]

    shipment.repo:
        class: Doctrine\Common\Persistence\ObjectRepository
        factory_service: doctrine
        factory_method: getRepository
        arguments: [ Store\Bundle\BackendBundle\Entity\Shipment ]

    property.repo:
        class: Doctrine\Common\Persistence\ObjectRepository
        factory_service: doctrine
        factory_method: getRepository
        arguments: [ Store\Bundle\BackendBundle\Entity\Property ]

    property_value.repo:
        class: Doctrine\Common\Persistence\ObjectRepository
        factory_service: doctrine
        factory_method: getRepository
        arguments: [ Store\Bundle\BackendBundle\Entity\PropertyValue ]

    tag.repo:
        class: Doctrine\Common\Persistence\ObjectRepository
        factory_service: doctrine
        factory_method: getRepository
        arguments: [ Store\Bundle\BackendBundle\Entity\Tag ]

    alipay.repo:
        class: Doctrine\Common\Persistence\ObjectRepository
        factory_service: doctrine
        factory_method: getRepository
        arguments: [ Store\Bundle\BackendBundle\Entity\Alipay ]

#entity paginator
    user.paginator:
        class: Store\Bundle\BackendBundle\Factory\EntityPaginationFactory
        arguments: [@request_stack,@knp_paginator,@user.repo]

    productBasket.paginator:
        class: Store\Bundle\BackendBundle\Factory\EntityPaginationFactory
        arguments: [@request_stack,@knp_paginator,@basket.repo]

    product.paginator:
        class: Store\Bundle\BackendBundle\Factory\EntityPaginationFactory
        arguments: [@request_stack,@knp_paginator,@product.repo]

#service
    store.cart:
        class: Store\Bundle\BackendBundle\Cart\Cart
        arguments: [@service_container]